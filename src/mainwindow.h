/* mainwindow.h - defines the MainWindow class, which implements
                  the program's main window and virtually all UI-related things.

 This file is part of QMPlot licensed under GPLv2.

 Copyright (C) Piotr Dziwinski 2009-2010
*/

#ifndef _QMPLOT_MAINWINDOW_H
#define _QMPLOT_MAINWINDOW_H

#include "common.h"
#include "treeparser.h"
#include "function.h"

#include <QMainWindow>

// Forward declarations to avoid including headers
namespace Ui
{
  class MainWindow;
};
class FunctionDB;
class Function;
class ExportDialog;
class PreferencesDialog;
class ReferenceDialog;
class AboutDialog;
class QListWidgetItem;
class QTranslator;
class QSettings;

/** \class MainWindow The main window of the program

Main window UI is divided into the central widget - PlotArea, which plots the functions,
several dock widgets, which display the function/view properties, and menu bar and
tool bar with actions. This class contains code implemenenting all of these things. */
class MainWindow : public QMainWindow
{
  Q_OBJECT

  public:
    MainWindow(QWidget *parent = NULL);
    ~MainWindow();

  signals:
    //! Sent when the user changes language settings
    void languageChanged();

  private slots:

    //! Connected to languageChanged()
    void retranslate();

    // Function list dock events

    void functionListItemChanged(QListWidgetItem *item);
    void functionSelected(const QString &name);

    void addCartesianFunction();
    void addParametricFunction();
    void addImplicitFunction();

    void removeCurrentFunction();

    // Function properties dock events

    // Common to all functions

    void fNameChanged();
    void fWidthChanged(double value);
    void fColorChanged(const QColor &color);

    // From specific function page on widget stack

    // Cartesian function

    void cTypeChanged(int type);
    void cFormulaChanged();
    void cMinFChanged(bool on);
    void cMinChanged(double value, bool valid);
    void cMaxFChanged(bool on);
    void cMaxChanged(double value, bool valid);

    // Parametric function

    void pXFormulaChanged();
    void pYFormulaChanged();
    void pMinParamChanged(double value, bool valid);
    void pMaxParamChanged(double value, bool valid);
    void pParamStepChanged(double value, bool valid);

    // Implicit function

    void iFormulaChanged();
    void iDrawAccuracyChanged(double value, bool valid);

    // View properties dock events

    void unitScaleChanged(double value, bool valid);
    void txChanged(double value, bool valid);
    void tyChanged(double value, bool valid);
    void axisUnitFChanged(bool on);
    void axisUnitChanged(double value, bool valid);

    // Events generated by PlotArea

    // Recursion was detected while drawing functions
    void recursionDetected(const QString &functionName);

    // Actions in menu & toolbar

    void actionNew();
    void actionOpen();
    void actionSave();
    void actionSaveAs();
    void actionExport();

    void exportDialogAccepted();

    void actionPreferences();

    void preferencesDialogAccepted();

  private:
    //! MainWindow ui generated from mainwindow.ui
    Ui::MainWindow *_ui;

    //! FunctionDB object (should be the only one!)
    FunctionDB *_functionDB;

    //! Pointer to the current (selected) function from FunctionDB (could be NULL!)
    Function* _currentFunction;

    //! Name of the currently edited file
    QString _fileName;

    //! Application settings data struct
    Settings _settingsData;
    //! QSettings object
    QSettings *_settings;

    //! Application QTranslator object
    QTranslator *_translator;

    //! List of translations (language names) available
    QStringList _translations;
    //! List of translation files (the values are matched to list of translations)
    QStringList _translationFiles;

    // Various dialogs
    ExportDialog *_exportDialog;
    PreferencesDialog *_preferencesDialog;
    ReferenceDialog *_referenceDialog;
    AboutDialog *_aboutDialog;

    // Actions associated with the add button context menu
    QAction *_addCartesianFunctionAction,
            *_addParametricFunctionAction,
            *_addImplicitFunctionAction;

    //! Fills the _translationFiles
    void listTranslationFiles();
    //! Fills the _translations
    void listTranslationNames();

    //! Loads settings to _settingsData
    void loadSettings();
    //! Saves settings in _settingsData
    void saveSettings();

    //! Called when user changes settings
    void settingsChanged(const Settings &newSettings);

    //! Resets the user interface
    void reset();

    //! Called when a new function was added
    void functionAdded(Function *newFunction);

    /** Called when the current function is changed
         - whenever the variable _currentFunction changes */
    void functionChanged();

    //! Functions returning translated error messages given the argument
    QString generateErrorMessage(ParseStatus status);
    QString generateErrorMessage(VerifyError error);

    //! Open a given file
    void openFile(const QString &fileName);
    //! Save to a given file
    void saveFile(const QString &fileName);

  protected:
    //! Reimplemented to allow for warning of edited documents
    void closeEvent(QCloseEvent *e);
};

#endif // _QMPLOT_MAINWINDOW_H
